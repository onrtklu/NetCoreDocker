version: '3.4'

services:

    redis:
        image: "redis:alpine"  
        hostname: "hostredis"
        ports:
            - "6379:6379"
        networks:
            - dockernet
    seq:
        image: datalust/seq:latest
        hostname: "hostseq"
        environment:
            - ACCEPT_EULA=Y
        ports:
            - "5340:80"
        networks:
            - dockernet

    netcore.api:
        image: ${REGISTRY:-dockerexample}/netcoreapi
        hostname: "hostnetcore"
        build:
            context: .
            dockerfile: ./NetCore.API/Dockerfile
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://0.0.0.0:80
            - PORT=80
            - PATH_BASE=/netcore-api
        ports:
            - "4201:80"
        networks:
            - dockernet
    

    elasticsearch:
        hostname: "hostelasticsearch"
        build:
            context: elk/elasticsearch/
        volumes:
            - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
        ports:
            - "9200:9200"
            - "9300:9300"
        environment:
            ES_JAVA_OPTS: "-Xmx256m -Xms256m"
        networks:
            - dockernet

    logstash:
        hostname: "hostlogstash"
        build:
            context: elk/logstash/
        command: -f /etc/logstash/conf.d/
        volumes:
            - ./logstash/:/etc/logstash/conf.d/
        ports:
            - "8080:8080"
        environment:
            LS_JAVA_OPTS: "-Xmx256m -Xms256m"
        depends_on:
            - elasticsearch
        networks:
            - dockernet

    kibana:
        hostname: "hostkibana"
        build:
            context: elk/kibana/
        volumes:
            - ./elk/kibana/config/:/usr/share/kibana/config:ro
        ports:
            - "5601:5601"
        depends_on:
            - elasticsearch
        networks:
            - dockernet

    
            
networks:
    dockernet:
        external: false